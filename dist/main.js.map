{"version":3,"file":"main.js","mappings":";mBAGIA,SAASC,eAAe,SAASC,iBAAiB,SAAS,WAEvD,MAAMC,EAAaH,SAASC,eAAe,SAASG,MAC9CC,EAAYL,SAASC,eAAe,cACpCK,EAAgBN,SAASC,eAAe,oBCE/C,SAAuBE,EAAYI,EAASC,EAAWC,GAC5D,QAAGN,EAAWO,ODDU,GCCYP,EAAWO,ODAvB,KCEgB,IAA7BP,EAAWQ,MDJK,eCS7B,CDLSC,CAAcT,IAKbG,EAAcO,UAAUC,OAAO,UAC/BR,EAAcO,UAAUE,IAAI,YAC5BV,EAAUW,UAAY,yBANtBV,EAAcO,UAAUE,IAAI,UAC5BT,EAAcO,UAAUC,OAAO,YAC/BT,EAAUW,UAAY,kMAMT,IAAdb,IACDG,EAAcO,UAAUC,OAAO,YAC/BR,EAAcO,UAAUC,OAAO,UAC/BT,EAAUW,UAAY,8BAE1B,IAEAhB,SAASC,eAAe,SAASC,iBAAiB,SAAS,WACvD,MAAMe,EAAajB,SAASC,eAAe,SAASG,MAC9Cc,EAAYlB,SAASC,eAAe,cACpCkB,EAAiBnB,SAASC,eAAe,oBC9BhD,SAAuBgB,EAAYV,GACxC,QAAGU,EAAWN,MD8Ba,4BCzB7B,CD2BUS,CAAcH,IAKdE,EAAeN,UAAUE,IAAI,YAC7BI,EAAeN,UAAUC,OAAO,UAChCI,EAAUF,UAAY,6CANtBG,EAAeN,UAAUE,IAAI,UAC7BI,EAAeN,UAAUC,OAAO,YAChCI,EAAUF,UAAY,iMAMT,IAAdC,IACDE,EAAeN,UAAUC,OAAO,YAChCK,EAAeN,UAAUC,OAAO,UAChCI,EAAUF,UAAY,8BAE1B,IAEAhB,SAASC,eAAe,YAAYC,iBAAiB,SAAS,WAC1D,MAAMmB,EAAgBrB,SAASC,eAAe,YAAYG,MAEpDkB,EAAoBtB,SAASC,eAAe,sBAC5CsB,EAAgBvB,SAASC,eAAe,kBCnC/C,SAA0BoB,EAAed,GAC9C,QDgC8B,sBChCnBiB,KAAKH,EAKlB,CD+BSI,CAAiBJ,IAKhBC,EAAkBT,UAAUC,OAAO,UACnCQ,EAAkBT,UAAUE,IAAI,YAChCQ,EAAcP,UAAY,mDAN1BM,EAAkBT,UAAUE,IAAI,UAChCO,EAAkBT,UAAUC,OAAO,YACnCS,EAAcP,UAAY,iMAMV,IAAjBK,IACDC,EAAkBT,UAAUC,OAAO,UACnCQ,EAAkBT,UAAUC,OAAO,YACnCS,EAAcP,UAAY,iCAE9B","sources":["webpack://form-validate-page/./src/index.js","webpack://form-validate-page/./node_modules/sy-validator/libaryValidations.js"],"sourcesContent":["import {validateEmail, validateLogin, validatePassword} from 'sy-validator';\r\n\r\n    //! Login =============================\r\n    document.getElementById('login').addEventListener(\"keyup\", function(){\r\n        \r\n        const loginValue = document.getElementById('login').value;\r\n        const loginInfo = document.getElementById('info-login');\r\n        const indicatorName = document.getElementById('indicator-login');\r\n        const patternLogin = /[a-zA-Z0-9]+/;\r\n        const minLength = 6;\r\n        const maxLength = 12;\r\n  \r\n      if(validateLogin(loginValue, patternLogin, minLength, maxLength)) {\r\n          indicatorName.classList.add('valide');\r\n          indicatorName.classList.remove('unvalide');\r\n          loginInfo.innerHTML = `<p>link to get function </p> <a href=\"https://pretya.github.io/library-validations/libaryValidations.js\" target=\"_blank\">https://pretya.github.io/library-validations/libaryValidations.js</a>`\r\n        } else {\r\n          indicatorName.classList.remove('valide');\r\n          indicatorName.classList.add('unvalide');\r\n          loginInfo.innerHTML = `min ${minLength} max ${maxLength} letters`\r\n        }\r\n      if(loginValue == \"\") {\r\n        indicatorName.classList.remove('unvalide');\r\n        indicatorName.classList.remove('valide');\r\n        loginInfo.innerHTML = `<--- Pleas enter your login`\r\n      } \r\n    })\r\n    //! Email ============================\r\n    document.getElementById('email').addEventListener('keyup', function(){\r\n        const emailValue = document.getElementById('email').value;\r\n        const emailInfo = document.getElementById('info-email');\r\n        const indicatorEmail = document.getElementById('indicator-email');\r\n        const patternEmail = /^[^ ]+@[^ ]+\\.[a-z]{2,3}$/;\r\n    \r\n      if (validateEmail(emailValue, patternEmail)) {\r\n          indicatorEmail.classList.add('valide');\r\n          indicatorEmail.classList.remove('unvalide');\r\n          emailInfo.innerHTML = `<p>link to get function</p> <a href=\"https://pretya.github.io/library-validations/libaryValidations.js\" target=\"_blank\">https://pretya.github.io/library-validations/libaryValidations.js</a>`\r\n        } else {\r\n          indicatorEmail.classList.add('unvalide');\r\n          indicatorEmail.classList.remove('valide')\r\n          emailInfo.innerHTML = `Should look like this \"info@support.com\"`\r\n        }\r\n      if(emailValue == \"\") {\r\n        indicatorEmail.classList.remove('unvalide');\r\n        indicatorEmail.classList.remove('valide');\r\n        emailInfo.innerHTML = `<--- Pleas enter your email`\r\n      }\r\n    })\r\n    //! Password ===========================\r\n    document.getElementById('password').addEventListener('keyup', function(){\r\n        const passwordValue = document.getElementById('password').value;\r\n        const patternPassword = /^(?=.*\\d)\\w{3,20}$/m;\r\n        const indicatorPassword = document.getElementById('indicator-password');\r\n        const loginPassword = document.getElementById('info-password');\r\n    \r\n      if(validatePassword(passwordValue, patternPassword)) {\r\n          indicatorPassword.classList.add('valide');\r\n          indicatorPassword.classList.remove('unvalide');\r\n          loginPassword.innerHTML = `<p>link to get function</p> <a href=\"https://pretya.github.io/library-validations/libaryValidations.js\" target=\"_blank\">https://pretya.github.io/library-validations/libaryValidations.js</a>`\r\n        } else {\r\n          indicatorPassword.classList.remove('valide');\r\n          indicatorPassword.classList.add('unvalide');\r\n          loginPassword.innerHTML = `Must contain Latin + numbers (minimum 1 digit)`\r\n        }\r\n      if(passwordValue == \"\") {\r\n        indicatorPassword.classList.remove('valide');\r\n        indicatorPassword.classList.remove('unvalide');\r\n        loginPassword.innerHTML = `<--- Pleas enter your password`\r\n      }\r\n    })\r\n    \r\n\r\n","\r\nexport function validateEmail(emailValue, pattern) {\r\n  if(emailValue.match(pattern)) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function validateLogin(loginValue, pattern, minLength, maxLength) {\r\n  if(loginValue.length < minLength || loginValue.length > maxLength) {\r\n    return false;\r\n  } else if(!loginValue.match(pattern) == true) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function validatePassword(passwordValue, pattern) {\r\n  if(pattern.test(passwordValue)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n"],"names":["document","getElementById","addEventListener","loginValue","value","loginInfo","indicatorName","pattern","minLength","maxLength","length","match","validateLogin","classList","remove","add","innerHTML","emailValue","emailInfo","indicatorEmail","validateEmail","passwordValue","indicatorPassword","loginPassword","test","validatePassword"],"sourceRoot":""}